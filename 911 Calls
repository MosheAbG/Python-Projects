# The Following project is to analyze some 911 call data
# To see what the most common calls are and when they happen amongst other analyses
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("C:\\Users\\Michael\\Downloads\\911.csv")
df.info()
df.head()
# Finding out some general info like the most common zipcodes and townships
df["zip"].value_counts().head()
df["twp"].value_counts().head()

# Create a new column which just gives the general reason
# These are EMS, Fire and Traffic
df["Reason"] = df["title"].apply(lambda res: res.split(":")[0])
df["Reason"].value_counts()
# Simple diagram showing the number of calls per each reason
sns.countplot(x=df["Reason"])
plt.show()

# Convert the time stamp column which contains strings into a datetime object
df["timeStamp"] = df["timeStamp"].apply(lambda str: pd.to_datetime(str))

# From the timestamp column get the hour, month and day of week
df["Hour"] = df["timeStamp"].apply(lambda hour: hour.hour)
df["Month"] = df["timeStamp"].apply(lambda mon: mon.month)
df["dayOfWeek"] = df["timeStamp"].apply(lambda day: day.weekday())
# Convert day of week from number into actual day
dmap = {0: "Mon", 1: "tue", 2: "Wed", 3: "Thu", 4: "Fri", 5: "Sat", 6: "Sun"}
df["dayOfWeek"] = df["dayOfWeek"].apply(lambda day: dmap[day])

# New plot of reason by day and month
sns.countplot(x=df["dayOfWeek"], hue=df["Reason"])
plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.show()
sns.countplot(x=df["Month"], hue=df["Reason"])
plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.show()

# Since some months are missing from data, I'll try to fill in the missing moths
byMonth = df.groupby("Month").count()
byMonth["lat"].plot()
plt.show()
# A line of best fit on number of calls per month
byMonth.reset_index(level=0, inplace=True)
sns.lmplot(x="Month", y="twp", data=byMonth)
plt.show()
# Now some plotting of day by day aggregated
# Then for each reason by day aggregated
df["Date"] = df["timeStamp"].apply(lambda time: time.date())
byDate = df.groupby("Date").count()
byDate["lat"].plot()
plt.show()

Reason = df[df["Reason"] == "Traffic"]
byDateTr = Reason.groupby("Date").count()
byDateTr["lat"].plot()
plt.title("Traffic")
plt.show()

Fire = df[df["Reason"] == "Fire"]
byDateFr = Fire.groupby("Date").count()
byDateFr["lat"].plot()
plt.title("Fire")
plt.show()

EMS = df[df["Reason"] == "EMS"]
byDateEMS = EMS.groupby("Date").count()
byDateEMS["lat"].plot()
plt.title("EMS")
plt.show()

# Next I'll visualize the data with heat map
# For heatmap it needs to be indexed properly, so days of week become the indexes
dayHour = df.groupby(["dayOfWeek", "Hour"]).count()["lat"].unstack(level=-1, fill_value=0)
sns.heatmap(dayHour, cmap="viridis")
plt.show()

sns.clustermap(dayHour, cmap="viridis")
plt.show()

dayMonth = df.groupby(["dayOfWeek", "Month"]).count()["lat"].unstack()
sns.heatmap(dayMonth, cmap="viridis")
plt.show()

sns.clustermap(dayMonth, cmap="viridis")
plt.show()
